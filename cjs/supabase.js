"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(exports,{createGitHubAccount:function(){return o},deleteGitHubAccount:function(){return f},getAllGitHubAccounts:function(){return c},getGitHubAccount:function(){return s},migrateGitHubAccountsFromJson:function(){return m},updateGitHubAccount:function(){return l}});const e=require("@supabase/supabase-js"),t=require("dotenv"),r=require("url"),n=require("path"),i=(0,r.fileURLToPath)(require("url").pathToFileURL(__filename).toString()),u=(0,n.dirname)(i),a=(()=>{let r=(0,n.join)(u,"../../.env");(0,t.config)({path:r});let i=process.env.SUPABASE_URL,a=process.env.SUPABASE_KEY;if(!i||!a)throw Error(`Supabase credentials are not properly configured. 
      URL: ${i?"exists":"missing"}, 
      KEY: ${a?"exists":"missing"}
      ENV Path: ${r}`);return(0,e.createClient)(i,a)})(),o=async e=>{let{data:t,error:r}=await a.from("github_accounts").insert([{username:e.username,full_name:e.fullName,email:e.email,token:e.token,expired:e.expired}]).select();if(r)throw r;return t},c=async()=>{let{data:e,error:t}=await a.from("github_accounts").select("*");if(t)throw t;return e},s=async e=>{let{data:t,error:r}=await a.from("github_accounts").select("*").eq("username",e).single();if(r)throw r;return t},l=async(e,t)=>{let{data:r,error:n}=await a.from("github_accounts").update({full_name:t.fullName,email:t.email,token:t.token,expired:t.expired}).eq("username",e).select();if(n)throw n;return r},f=async e=>{let{data:t,error:r}=await a.from("github_accounts").delete().eq("username",e).select();if(r)throw r;return t},m=async e=>{for(let t of Object.entries(e).map(([e,t])=>({username:e,fullName:t.fullName,email:t.email,token:t.token,expired:t.expired||null})))await o(t)};