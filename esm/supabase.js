import{createClient as e}from"@supabase/supabase-js";import{config as t}from"dotenv";import{fileURLToPath as r}from"url";import{dirname as a,join as i}from"path";let n=a(r(import.meta.url)),o=(()=>{let r=i(n,"../../.env");t({path:r});let a=process.env.SUPABASE_URL,o=process.env.SUPABASE_KEY;if(!a||!o)throw Error(`Supabase credentials are not properly configured. 
      URL: ${a?"exists":"missing"}, 
      KEY: ${o?"exists":"missing"}
      ENV Path: ${r}`);return e(a,o)})(),u=async e=>{let{data:t,error:r}=await o.from("github_accounts").insert([{username:e.username,full_name:e.fullName,email:e.email,token:e.token,expired:e.expired}]).select();if(r)throw r;return t},s=async()=>{let{data:e,error:t}=await o.from("github_accounts").select("*");if(t)throw t;return e},l=async e=>{let{data:t,error:r}=await o.from("github_accounts").select("*").eq("username",e).single();if(r)throw r;return t},c=async(e,t)=>{let{data:r,error:a}=await o.from("github_accounts").update({full_name:t.fullName,email:t.email,token:t.token,expired:t.expired}).eq("username",e).select();if(a)throw a;return r},m=async e=>{let{data:t,error:r}=await o.from("github_accounts").delete().eq("username",e).select();if(r)throw r;return t},f=async e=>{for(let t of Object.entries(e).map(([e,t])=>({username:e,fullName:t.fullName,email:t.email,token:t.token,expired:t.expired||null})))await u(t)};export{u as createGitHubAccount,s as getAllGitHubAccounts,l as getGitHubAccount,c as updateGitHubAccount,m as deleteGitHubAccount,f as migrateGitHubAccountsFromJson};